User [id=0, name=Doug Lea, sex=1, birthday=1968-12-08, email=dong.lea@gmail.com, mobile=18612345678, address=北京市 中关村 中关村大街1号 鼎好大厦 1605, icon=https://www.baidu.com/img/bd_logo1.png, permissions=[1, 2, 3, 4, 5, 6, 7, 8, 19, 88, 86, 89, 90, 91, 92], status=1, createTime=2018-04-03T02:06:39.668295, updateTime=2018-04-03T02:06:39.668295]
# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.rpc.Client.createUser

# Run progress: 0.00% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/test/springboot-client/target/springboot-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1.446 ops/ms
# Warmup Iteration   2: 2.484 ops/ms
# Warmup Iteration   3: 3.425 ops/ms
# Warmup Iteration   4: 4.501 ops/ms
# Warmup Iteration   5: 3.867 ops/ms
# Warmup Iteration   6: 6.085 ops/ms
# Warmup Iteration   7: 5.785 ops/ms
# Warmup Iteration   8: 6.248 ops/ms
# Warmup Iteration   9: 5.909 ops/ms
# Warmup Iteration  10: 5.769 ops/ms
Iteration   1: 6.488 ops/ms
Iteration   2: 6.118 ops/ms
Iteration   3: 6.287 ops/ms


Result "benchmark.rpc.Client.createUser":
  6.298 ±(99.9%) 3.380 ops/ms [Average]
  (min, avg, max) = (6.118, 6.298, 6.488), stdev = 0.185
  CI (99.9%): [2.917, 9.678] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.rpc.Client.existUser

# Run progress: 8.33% complete, ETA 00:02:46
# Fork: 1 of 1
# Warmup Iteration   1: 5.686 ops/ms
# Warmup Iteration   2: 6.950 ops/ms
# Warmup Iteration   3: 7.282 ops/ms
# Warmup Iteration   4: 7.813 ops/ms
# Warmup Iteration   5: 8.411 ops/ms
# Warmup Iteration   6: 8.326 ops/ms
# Warmup Iteration   7: 8.170 ops/ms
# Warmup Iteration   8: 8.353 ops/ms
# Warmup Iteration   9: 8.240 ops/ms
# Warmup Iteration  10: 8.602 ops/ms
Iteration   1: 8.897 ops/ms
Iteration   2: 9.789 ops/ms
Iteration   3: 9.370 ops/ms


Result "benchmark.rpc.Client.existUser":
  9.352 ±(99.9%) 8.144 ops/ms [Average]
  (min, avg, max) = (8.897, 9.352, 9.789), stdev = 0.446
  CI (99.9%): [1.207, 17.496] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.rpc.Client.getUser

# Run progress: 16.67% complete, ETA 00:02:29
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/test/springboot-client/target/springboot-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
4.528 ops/ms
# Warmup Iteration   2: 7.564 ops/ms
# Warmup Iteration   3: 8.757 ops/ms
# Warmup Iteration   4: 9.096 ops/ms
# Warmup Iteration   5: 9.709 ops/ms
# Warmup Iteration   6: 9.659 ops/ms
# Warmup Iteration   7: 10.158 ops/ms
# Warmup Iteration   8: 9.902 ops/ms
# Warmup Iteration   9: 9.704 ops/ms
# Warmup Iteration  10: 9.805 ops/ms
Iteration   1: 9.843 ops/ms
Iteration   2: 11.000 ops/ms
Iteration   3: 10.870 ops/ms


Result "benchmark.rpc.Client.getUser":
  10.571 ±(99.9%) 11.563 ops/ms [Average]
  (min, avg, max) = (9.843, 10.571, 11.000), stdev = 0.634
  CI (99.9%): [≈ 0, 22.134] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.rpc.Client.listUser

# Run progress: 25.00% complete, ETA 00:02:13
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/test/springboot-client/target/springboot-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2.739 ops/ms
# Warmup Iteration   2: 5.269 ops/ms
# Warmup Iteration   3: 9.430 ops/ms
# Warmup Iteration   4: 10.277 ops/ms
# Warmup Iteration   5: 11.873 ops/ms
# Warmup Iteration   6: 11.749 ops/ms
# Warmup Iteration   7: 11.452 ops/ms
# Warmup Iteration   8: 11.748 ops/ms
# Warmup Iteration   9: 12.228 ops/ms
# Warmup Iteration  10: 11.838 ops/ms
Iteration   1: 12.303 ops/ms
Iteration   2: 11.418 ops/ms
Iteration   3: 12.432 ops/ms


Result "benchmark.rpc.Client.listUser":
  12.051 ±(99.9%) 10.068 ops/ms [Average]
  (min, avg, max) = (11.418, 12.051, 12.432), stdev = 0.552
  CI (99.9%): [1.983, 22.119] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.rpc.Client.createUser

# Run progress: 33.33% complete, ETA 00:01:58
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/test/springboot-client/target/springboot-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
6.480 ±(99.9%) 0.477 ms/op
# Warmup Iteration   2: 4.429 ±(99.9%) 0.336 ms/op
# Warmup Iteration   3: 3.602 ±(99.9%) 0.150 ms/op
# Warmup Iteration   4: 2.869 ±(99.9%) 0.205 ms/op
# Warmup Iteration   5: 2.326 ±(99.9%) 0.110 ms/op
# Warmup Iteration   6: 2.170 ±(99.9%) 0.106 ms/op
# Warmup Iteration   7: 2.289 ±(99.9%) 0.117 ms/op
# Warmup Iteration   8: 2.361 ±(99.9%) 0.131 ms/op
# Warmup Iteration   9: 2.297 ±(99.9%) 0.140 ms/op
# Warmup Iteration  10: 2.160 ±(99.9%) 0.108 ms/op
Iteration   1: 2.107 ±(99.9%) 0.091 ms/op
Iteration   2: 2.270 ±(99.9%) 0.094 ms/op
Iteration   3: 2.173 ±(99.9%) 0.131 ms/op


Result "benchmark.rpc.Client.createUser":
  2.184 ±(99.9%) 1.498 ms/op [Average]
  (min, avg, max) = (2.107, 2.184, 2.270), stdev = 0.082
  CI (99.9%): [0.686, 3.681] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.rpc.Client.existUser

# Run progress: 41.67% complete, ETA 00:01:43
# Fork: 1 of 1
# Warmup Iteration   1: 5.208 ±(99.9%) 0.297 ms/op
# Warmup Iteration   2: 3.603 ±(99.9%) 0.250 ms/op
# Warmup Iteration   3: 2.558 ±(99.9%) 0.177 ms/op
# Warmup Iteration   4: 2.508 ±(99.9%) 0.152 ms/op
# Warmup Iteration   5: 2.352 ±(99.9%) 0.088 ms/op
# Warmup Iteration   6: 2.564 ±(99.9%) 0.124 ms/op
# Warmup Iteration   7: 2.250 ±(99.9%) 0.117 ms/op
# Warmup Iteration   8: 2.199 ±(99.9%) 0.142 ms/op
# Warmup Iteration   9: 2.429 ±(99.9%) 0.147 ms/op
# Warmup Iteration  10: 2.291 ±(99.9%) 0.165 ms/op
Iteration   1: 2.225 ±(99.9%) 0.158 ms/op
Iteration   2: 2.112 ±(99.9%) 0.102 ms/op
Iteration   3: 2.201 ±(99.9%) 0.142 ms/op


Result "benchmark.rpc.Client.existUser":
  2.179 ±(99.9%) 1.084 ms/op [Average]
  (min, avg, max) = (2.112, 2.179, 2.225), stdev = 0.059
  CI (99.9%): [1.095, 3.263] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.rpc.Client.getUser

# Run progress: 50.00% complete, ETA 00:01:28
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/test/springboot-client/target/springboot-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
7.371 ±(99.9%) 0.752 ms/op
# Warmup Iteration   2: 4.123 ±(99.9%) 0.273 ms/op
# Warmup Iteration   3: 3.206 ±(99.9%) 0.183 ms/op
# Warmup Iteration   4: 2.563 ±(99.9%) 0.166 ms/op
# Warmup Iteration   5: 2.387 ±(99.9%) 0.205 ms/op
# Warmup Iteration   6: 2.292 ±(99.9%) 0.120 ms/op
# Warmup Iteration   7: 2.202 ±(99.9%) 0.163 ms/op
# Warmup Iteration   8: 2.313 ±(99.9%) 0.141 ms/op
# Warmup Iteration   9: 2.329 ±(99.9%) 0.158 ms/op
# Warmup Iteration  10: 2.383 ±(99.9%) 0.175 ms/op
Iteration   1: 2.383 ±(99.9%) 0.230 ms/op
Iteration   2: 2.168 ±(99.9%) 0.128 ms/op
Iteration   3: 2.203 ±(99.9%) 0.120 ms/op


Result "benchmark.rpc.Client.getUser":
  2.251 ±(99.9%) 2.106 ms/op [Average]
  (min, avg, max) = (2.168, 2.251, 2.383), stdev = 0.115
  CI (99.9%): [0.145, 4.358] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.rpc.Client.listUser

# Run progress: 58.33% complete, ETA 00:01:13
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/test/springboot-client/target/springboot-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
13.427 ±(99.9%) 1.701 ms/op
# Warmup Iteration   2: 5.860 ±(99.9%) 0.316 ms/op
# Warmup Iteration   3: 3.738 ±(99.9%) 0.222 ms/op
# Warmup Iteration   4: 3.015 ±(99.9%) 0.179 ms/op
# Warmup Iteration   5: 2.585 ±(99.9%) 0.119 ms/op
# Warmup Iteration   6: 2.715 ±(99.9%) 0.186 ms/op
# Warmup Iteration   7: 2.900 ±(99.9%) 0.142 ms/op
# Warmup Iteration   8: 2.593 ±(99.9%) 0.115 ms/op
# Warmup Iteration   9: 2.612 ±(99.9%) 0.121 ms/op
# Warmup Iteration  10: 2.783 ±(99.9%) 0.111 ms/op
Iteration   1: 2.756 ±(99.9%) 0.132 ms/op
Iteration   2: 2.466 ±(99.9%) 0.108 ms/op
Iteration   3: 2.501 ±(99.9%) 0.118 ms/op


Result "benchmark.rpc.Client.listUser":
  2.574 ±(99.9%) 2.886 ms/op [Average]
  (min, avg, max) = (2.466, 2.574, 2.756), stdev = 0.158
  CI (99.9%): [≈ 0, 5.460] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: benchmark.rpc.Client.createUser

# Run progress: 66.67% complete, ETA 00:00:58
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/test/springboot-client/target/springboot-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5.391 ±(99.9%) 0.330 ms/op
# Warmup Iteration   2: 3.820 ±(99.9%) 0.113 ms/op
# Warmup Iteration   3: 3.441 ±(99.9%) 0.159 ms/op
# Warmup Iteration   4: 2.340 ±(99.9%) 0.114 ms/op
# Warmup Iteration   5: 2.366 ±(99.9%) 0.127 ms/op
# Warmup Iteration   6: 2.613 ±(99.9%) 0.113 ms/op
# Warmup Iteration   7: 2.304 ±(99.9%) 0.096 ms/op
# Warmup Iteration   8: 2.265 ±(99.9%) 0.096 ms/op
# Warmup Iteration   9: 2.450 ±(99.9%) 0.122 ms/op
# Warmup Iteration  10: 2.453 ±(99.9%) 0.128 ms/op
Iteration   1: 2.198 ±(99.9%) 0.098 ms/op
                 createUser·p0.00:   0.344 ms/op
                 createUser·p0.50:   1.438 ms/op
                 createUser·p0.90:   3.556 ms/op
                 createUser·p0.95:   6.456 ms/op
                 createUser·p0.99:   17.548 ms/op
                 createUser·p0.999:  50.034 ms/op
                 createUser·p0.9999: 65.828 ms/op
                 createUser·p1.00:   66.126 ms/op

Iteration   2: 2.275 ±(99.9%) 0.111 ms/op
                 createUser·p0.00:   0.381 ms/op
                 createUser·p0.50:   1.321 ms/op
                 createUser·p0.90:   3.797 ms/op
                 createUser·p0.95:   7.438 ms/op
                 createUser·p0.99:   22.249 ms/op
                 createUser·p0.999:  45.213 ms/op
                 createUser·p0.9999: 100.608 ms/op
                 createUser·p1.00:   103.940 ms/op

Iteration   3: 2.277 ±(99.9%) 0.114 ms/op
                 createUser·p0.00:   0.373 ms/op
                 createUser·p0.50:   1.415 ms/op
                 createUser·p0.90:   3.369 ms/op
                 createUser·p0.95:   7.358 ms/op
                 createUser·p0.99:   21.234 ms/op
                 createUser·p0.999:  53.335 ms/op
                 createUser·p0.9999: 95.961 ms/op
                 createUser·p1.00:   106.693 ms/op



Result "benchmark.rpc.Client.createUser":
  N = 42802
  mean =      2.249 ±(99.9%) 0.062 ms/op

  Histogram, ms/op:
    [  0.000,  12.500) = 41903 
    [ 12.500,  25.000) = 616 
    [ 25.000,  37.500) = 184 
    [ 37.500,  50.000) = 58 
    [ 50.000,  62.500) = 33 
    [ 62.500,  75.000) = 4 
    [ 75.000,  87.500) = 1 
    [ 87.500, 100.000) = 1 
    [100.000, 112.500) = 2 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 0 

  Percentiles, ms/op:
      p(0.0000) =      0.344 ms/op
     p(50.0000) =      1.397 ms/op
     p(90.0000) =      3.572 ms/op
     p(95.0000) =      7.078 ms/op
     p(99.0000) =     19.988 ms/op
     p(99.9000) =     49.820 ms/op
     p(99.9900) =     78.447 ms/op
     p(99.9990) =    106.693 ms/op
     p(99.9999) =    106.693 ms/op
    p(100.0000) =    106.693 ms/op


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: benchmark.rpc.Client.existUser

# Run progress: 75.00% complete, ETA 00:00:44
# Fork: 1 of 1
# Warmup Iteration   1: 5.469 ±(99.9%) 0.251 ms/op
# Warmup Iteration   2: 3.625 ±(99.9%) 0.149 ms/op
# Warmup Iteration   3: 2.556 ±(99.9%) 0.103 ms/op
# Warmup Iteration   4: 2.363 ±(99.9%) 0.082 ms/op
# Warmup Iteration   5: 2.358 ±(99.9%) 0.105 ms/op
# Warmup Iteration   6: 2.272 ±(99.9%) 0.100 ms/op
# Warmup Iteration   7: 2.433 ±(99.9%) 0.119 ms/op
# Warmup Iteration   8: 2.311 ±(99.9%) 0.134 ms/op
# Warmup Iteration   9: 2.163 ±(99.9%) 0.112 ms/op
# Warmup Iteration  10: 2.236 ±(99.9%) 0.100 ms/op
Iteration   1: 2.144 ±(99.9%) 0.118 ms/op
                 existUser·p0.00:   0.342 ms/op
                 existUser·p0.50:   1.323 ms/op
                 existUser·p0.90:   2.707 ms/op
                 existUser·p0.95:   5.259 ms/op
                 existUser·p0.99:   21.692 ms/op
                 existUser·p0.999:  60.327 ms/op
                 existUser·p0.9999: 92.109 ms/op
                 existUser·p1.00:   95.027 ms/op

Iteration   2: 2.175 ±(99.9%) 0.126 ms/op
                 existUser·p0.00:   0.358 ms/op
                 existUser·p0.50:   1.337 ms/op
                 existUser·p0.90:   2.689 ms/op
                 existUser·p0.95:   4.880 ms/op
                 existUser·p0.99:   23.132 ms/op
                 existUser·p0.999:  73.069 ms/op
                 existUser·p0.9999: 76.569 ms/op
                 existUser·p1.00:   77.988 ms/op

Iteration   3: 2.169 ±(99.9%) 0.110 ms/op
                 existUser·p0.00:   0.348 ms/op
                 existUser·p0.50:   1.270 ms/op
                 existUser·p0.90:   3.187 ms/op
                 existUser·p0.95:   7.184 ms/op
                 existUser·p0.99:   20.349 ms/op
                 existUser·p0.999:  47.793 ms/op
                 existUser·p0.9999: 95.630 ms/op
                 existUser·p1.00:   98.435 ms/op



Result "benchmark.rpc.Client.existUser":
  N = 44518
  mean =      2.162 ±(99.9%) 0.068 ms/op

  Histogram, ms/op:
    [  0.000,  10.000) = 43201 
    [ 10.000,  20.000) = 775 
    [ 20.000,  30.000) = 314 
    [ 30.000,  40.000) = 101 
    [ 40.000,  50.000) = 66 
    [ 50.000,  60.000) = 18 
    [ 60.000,  70.000) = 15 
    [ 70.000,  80.000) = 22 
    [ 80.000,  90.000) = 3 

  Percentiles, ms/op:
      p(0.0000) =      0.342 ms/op
     p(50.0000) =      1.313 ms/op
     p(90.0000) =      2.855 ms/op
     p(95.0000) =      5.767 ms/op
     p(99.0000) =     21.555 ms/op
     p(99.9000) =     59.528 ms/op
     p(99.9900) =     87.424 ms/op
     p(99.9990) =     98.435 ms/op
     p(99.9999) =     98.435 ms/op
    p(100.0000) =     98.435 ms/op


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: benchmark.rpc.Client.getUser

# Run progress: 83.33% complete, ETA 00:00:29
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/test/springboot-client/target/springboot-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5.575 ±(99.9%) 0.336 ms/op
# Warmup Iteration   2: 3.663 ±(99.9%) 0.182 ms/op
# Warmup Iteration   3: 2.498 ±(99.9%) 0.086 ms/op
# Warmup Iteration   4: 2.289 ±(99.9%) 0.103 ms/op
# Warmup Iteration   5: 2.259 ±(99.9%) 0.103 ms/op
# Warmup Iteration   6: 2.217 ±(99.9%) 0.090 ms/op
# Warmup Iteration   7: 2.503 ±(99.9%) 0.129 ms/op
# Warmup Iteration   8: 2.374 ±(99.9%) 0.109 ms/op
# Warmup Iteration   9: 2.200 ±(99.9%) 0.126 ms/op
# Warmup Iteration  10: 2.308 ±(99.9%) 0.106 ms/op
Iteration   1: 2.398 ±(99.9%) 0.117 ms/op
                 getUser·p0.00:   0.381 ms/op
                 getUser·p0.50:   1.614 ms/op
                 getUser·p0.90:   3.207 ms/op
                 getUser·p0.95:   6.368 ms/op
                 getUser·p0.99:   21.829 ms/op
                 getUser·p0.999:  50.648 ms/op
                 getUser·p0.9999: 88.097 ms/op
                 getUser·p1.00:   92.275 ms/op

Iteration   2: 2.096 ±(99.9%) 0.093 ms/op
                 getUser·p0.00:   0.353 ms/op
                 getUser·p0.50:   1.372 ms/op
                 getUser·p0.90:   3.058 ms/op
                 getUser·p0.95:   6.709 ms/op
                 getUser·p0.99:   18.450 ms/op
                 getUser·p0.999:  40.048 ms/op
                 getUser·p0.9999: 73.126 ms/op
                 getUser·p1.00:   88.998 ms/op

Iteration   3: 2.193 ±(99.9%) 0.116 ms/op
                 getUser·p0.00:   0.361 ms/op
                 getUser·p0.50:   1.278 ms/op
                 getUser·p0.90:   3.224 ms/op
                 getUser·p0.95:   5.767 ms/op
                 getUser·p0.99:   22.905 ms/op
                 getUser·p0.999:  50.775 ms/op
                 getUser·p0.9999: 71.084 ms/op
                 getUser·p1.00:   71.565 ms/op



Result "benchmark.rpc.Client.getUser":
  N = 43243
  mean =      2.222 ±(99.9%) 0.063 ms/op

  Histogram, ms/op:
    [  0.000,  10.000) = 41957 
    [ 10.000,  20.000) = 767 
    [ 20.000,  30.000) = 315 
    [ 30.000,  40.000) = 114 
    [ 40.000,  50.000) = 58 
    [ 50.000,  60.000) = 20 
    [ 60.000,  70.000) = 7 
    [ 70.000,  80.000) = 3 
    [ 80.000,  90.000) = 1 

  Percentiles, ms/op:
      p(0.0000) =      0.353 ms/op
     p(50.0000) =      1.403 ms/op
     p(90.0000) =      3.166 ms/op
     p(95.0000) =      6.347 ms/op
     p(99.0000) =     21.842 ms/op
     p(99.9000) =     49.480 ms/op
     p(99.9900) =     71.225 ms/op
     p(99.9990) =     92.275 ms/op
     p(99.9999) =     92.275 ms/op
    p(100.0000) =     92.275 ms/op


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: benchmark.rpc.Client.listUser

# Run progress: 91.67% complete, ETA 00:00:14
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/test/springboot-client/target/springboot-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
8.087 ±(99.9%) 0.537 ms/op
# Warmup Iteration   2: 4.697 ±(99.9%) 0.185 ms/op
# Warmup Iteration   3: 3.508 ±(99.9%) 0.175 ms/op
# Warmup Iteration   4: 2.923 ±(99.9%) 0.123 ms/op
# Warmup Iteration   5: 2.839 ±(99.9%) 0.137 ms/op
# Warmup Iteration   6: 2.816 ±(99.9%) 0.113 ms/op
# Warmup Iteration   7: 2.789 ±(99.9%) 0.108 ms/op
# Warmup Iteration   8: 2.892 ±(99.9%) 0.107 ms/op
# Warmup Iteration   9: 2.754 ±(99.9%) 0.130 ms/op
# Warmup Iteration  10: 2.702 ±(99.9%) 0.106 ms/op
Iteration   1: 2.673 ±(99.9%) 0.111 ms/op
                 listUser·p0.00:   0.500 ms/op
                 listUser·p0.50:   1.952 ms/op
                 listUser·p0.90:   3.847 ms/op
                 listUser·p0.95:   7.053 ms/op
                 listUser·p0.99:   20.331 ms/op
                 listUser·p0.999:  43.584 ms/op
                 listUser·p0.9999: 84.832 ms/op
                 listUser·p1.00:   85.066 ms/op

Iteration   2: 2.792 ±(99.9%) 0.153 ms/op
                 listUser·p0.00:   0.570 ms/op
                 listUser·p0.50:   1.819 ms/op
                 listUser·p0.90:   3.415 ms/op
                 listUser·p0.95:   7.660 ms/op
                 listUser·p0.99:   28.808 ms/op
                 listUser·p0.999:  58.009 ms/op
                 listUser·p0.9999: 85.693 ms/op
                 listUser·p1.00:   86.901 ms/op

Iteration   3: 2.777 ±(99.9%) 0.132 ms/op
                 listUser·p0.00:   0.518 ms/op
                 listUser·p0.50:   1.767 ms/op
                 listUser·p0.90:   4.358 ms/op
                 listUser·p0.95:   8.078 ms/op
                 listUser·p0.99:   21.987 ms/op
                 listUser·p0.999:  47.971 ms/op
                 listUser·p0.9999: 61.320 ms/op
                 listUser·p1.00:   61.932 ms/op



Result "benchmark.rpc.Client.listUser":
  N = 34943
  mean =      2.746 ±(99.9%) 0.076 ms/op

  Histogram, ms/op:
    [ 0.000,  5.000) = 32362 
    [ 5.000, 10.000) = 1301 
    [10.000, 15.000) = 605 
    [15.000, 20.000) = 213 
    [20.000, 25.000) = 154 
    [25.000, 30.000) = 95 
    [30.000, 35.000) = 49 
    [35.000, 40.000) = 47 
    [40.000, 45.000) = 39 
    [45.000, 50.000) = 44 
    [50.000, 55.000) = 10 
    [55.000, 60.000) = 10 
    [60.000, 65.000) = 5 
    [65.000, 70.000) = 2 
    [70.000, 75.000) = 3 
    [75.000, 80.000) = 1 
    [80.000, 85.000) = 1 

  Percentiles, ms/op:
      p(0.0000) =      0.500 ms/op
     p(50.0000) =      1.858 ms/op
     p(90.0000) =      3.903 ms/op
     p(95.0000) =      7.650 ms/op
     p(99.0000) =     23.171 ms/op
     p(99.9000) =     49.582 ms/op
     p(99.9900) =     81.294 ms/op
     p(99.9990) =     86.901 ms/op
     p(99.9999) =     86.901 ms/op
    p(100.0000) =     86.901 ms/op


# Run complete. Total time: 00:02:58

Benchmark                               Mode    Cnt    Score    Error   Units
Client.createUser                      thrpt      3    6.298 ±  3.380  ops/ms
Client.existUser                       thrpt      3    9.352 ±  8.144  ops/ms
Client.getUser                         thrpt      3   10.571 ± 11.563  ops/ms
Client.listUser                        thrpt      3   12.051 ± 10.068  ops/ms
Client.createUser                       avgt      3    2.184 ±  1.498   ms/op
Client.existUser                        avgt      3    2.179 ±  1.084   ms/op
Client.getUser                          avgt      3    2.251 ±  2.106   ms/op
Client.listUser                         avgt      3    2.574 ±  2.886   ms/op
Client.createUser                     sample  42802    2.249 ±  0.062   ms/op
Client.createUser:createUser·p0.00    sample           0.344            ms/op
Client.createUser:createUser·p0.50    sample           1.397            ms/op
Client.createUser:createUser·p0.90    sample           3.572            ms/op
Client.createUser:createUser·p0.95    sample           7.078            ms/op
Client.createUser:createUser·p0.99    sample          19.988            ms/op
Client.createUser:createUser·p0.999   sample          49.820            ms/op
Client.createUser:createUser·p0.9999  sample          78.447            ms/op
Client.createUser:createUser·p1.00    sample         106.693            ms/op
Client.existUser                      sample  44518    2.162 ±  0.068   ms/op
Client.existUser:existUser·p0.00      sample           0.342            ms/op
Client.existUser:existUser·p0.50      sample           1.313            ms/op
Client.existUser:existUser·p0.90      sample           2.855            ms/op
Client.existUser:existUser·p0.95      sample           5.767            ms/op
Client.existUser:existUser·p0.99      sample          21.555            ms/op
Client.existUser:existUser·p0.999     sample          59.528            ms/op
Client.existUser:existUser·p0.9999    sample          87.424            ms/op
Client.existUser:existUser·p1.00      sample          98.435            ms/op
Client.getUser                        sample  43243    2.222 ±  0.063   ms/op
Client.getUser:getUser·p0.00          sample           0.353            ms/op
Client.getUser:getUser·p0.50          sample           1.403            ms/op
Client.getUser:getUser·p0.90          sample           3.166            ms/op
Client.getUser:getUser·p0.95          sample           6.347            ms/op
Client.getUser:getUser·p0.99          sample          21.842            ms/op
Client.getUser:getUser·p0.999         sample          49.480            ms/op
Client.getUser:getUser·p0.9999        sample          71.225            ms/op
Client.getUser:getUser·p1.00          sample          92.275            ms/op
Client.listUser                       sample  34943    2.746 ±  0.076   ms/op
Client.listUser:listUser·p0.00        sample           0.500            ms/op
Client.listUser:listUser·p0.50        sample           1.858            ms/op
Client.listUser:listUser·p0.90        sample           3.903            ms/op
Client.listUser:listUser·p0.95        sample           7.650            ms/op
Client.listUser:listUser·p0.99        sample          23.171            ms/op
Client.listUser:listUser·p0.999       sample          49.582            ms/op
Client.listUser:listUser·p0.9999      sample          81.294            ms/op
Client.listUser:listUser·p1.00        sample          86.901            ms/op
