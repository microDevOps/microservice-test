# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.rpc.Client.createUser

# Run progress: 0.00% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by javassist.ClassPool (file:/root/test/dubbo-client/target/dubbo-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of javassist.ClassPool
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2.794 ops/ms
# Warmup Iteration   2: 6.464 ops/ms
# Warmup Iteration   3: 9.973 ops/ms
# Warmup Iteration   4: 9.734 ops/ms
# Warmup Iteration   5: 7.469 ops/ms
# Warmup Iteration   6: 12.793 ops/ms
# Warmup Iteration   7: 12.758 ops/ms
# Warmup Iteration   8: 13.083 ops/ms
# Warmup Iteration   9: 13.728 ops/ms
# Warmup Iteration  10: 14.528 ops/ms
Iteration   1: 15.070 ops/ms
Iteration   2: 14.582 ops/ms
Iteration   3: 14.633 ops/ms


Result "benchmark.rpc.Client.createUser":
  14.762 ±(99.9%) 4.897 ops/ms [Average]
  (min, avg, max) = (14.582, 14.762, 15.070), stdev = 0.268
  CI (99.9%): [9.865, 19.659] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.rpc.Client.existUser

# Run progress: 8.33% complete, ETA 00:03:00
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by javassist.ClassPool (file:/root/test/dubbo-client/target/dubbo-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of javassist.ClassPool
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
10.517 ops/ms
# Warmup Iteration   2: 17.638 ops/ms
# Warmup Iteration   3: 21.974 ops/ms
# Warmup Iteration   4: 26.648 ops/ms
# Warmup Iteration   5: 26.713 ops/ms
# Warmup Iteration   6: 27.279 ops/ms
# Warmup Iteration   7: 26.819 ops/ms
# Warmup Iteration   8: 27.492 ops/ms
# Warmup Iteration   9: 25.710 ops/ms
# Warmup Iteration  10: 25.726 ops/ms
Iteration   1: 28.000 ops/ms
Iteration   2: 26.713 ops/ms
Iteration   3: 25.609 ops/ms


Result "benchmark.rpc.Client.existUser":
  26.774 ±(99.9%) 21.834 ops/ms [Average]
  (min, avg, max) = (25.609, 26.774, 28.000), stdev = 1.197
  CI (99.9%): [4.940, 48.608] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.rpc.Client.getUser

# Run progress: 16.67% complete, ETA 00:02:43
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by javassist.ClassPool (file:/root/test/dubbo-client/target/dubbo-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of javassist.ClassPool
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
3.447 ops/ms
# Warmup Iteration   2: 7.722 ops/ms
# Warmup Iteration   3: 12.976 ops/ms
# Warmup Iteration   4: 14.494 ops/ms
# Warmup Iteration   5: 14.175 ops/ms
# Warmup Iteration   6: 14.441 ops/ms
# Warmup Iteration   7: 13.927 ops/ms
# Warmup Iteration   8: 15.138 ops/ms
# Warmup Iteration   9: 15.876 ops/ms
# Warmup Iteration  10: 16.914 ops/ms
Iteration   1: 15.516 ops/ms
Iteration   2: 15.236 ops/ms
Iteration   3: 13.661 ops/ms


Result "benchmark.rpc.Client.getUser":
  14.805 ±(99.9%) 18.241 ops/ms [Average]
  (min, avg, max) = (13.661, 14.805, 15.516), stdev = 1.000
  CI (99.9%): [≈ 0, 33.045] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.rpc.Client.listUser

# Run progress: 25.00% complete, ETA 00:02:26
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by javassist.ClassPool (file:/root/test/dubbo-client/target/dubbo-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of javassist.ClassPool
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1.568 ops/ms
# Warmup Iteration   2: 2.542 ops/ms
# Warmup Iteration   3: 2.709 ops/ms
# Warmup Iteration   4: 2.995 ops/ms
# Warmup Iteration   5: 2.918 ops/ms
# Warmup Iteration   6: 3.224 ops/ms
# Warmup Iteration   7: 3.208 ops/ms
# Warmup Iteration   8: 2.982 ops/ms
# Warmup Iteration   9: 3.023 ops/ms
# Warmup Iteration  10: 3.089 ops/ms
Iteration   1: 3.186 ops/ms
Iteration   2: 3.062 ops/ms
Iteration   3: 3.019 ops/ms


Result "benchmark.rpc.Client.listUser":
  3.089 ±(99.9%) 1.581 ops/ms [Average]
  (min, avg, max) = (3.019, 3.089, 3.186), stdev = 0.087
  CI (99.9%): [1.508, 4.670] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.rpc.Client.createUser

# Run progress: 33.33% complete, ETA 00:02:09
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by javassist.ClassPool (file:/root/test/dubbo-client/target/dubbo-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of javassist.ClassPool
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
4.928 ±(99.9%) 0.056 ms/op
# Warmup Iteration   2: 3.167 ±(99.9%) 0.010 ms/op
# Warmup Iteration   3: 2.286 ±(99.9%) 0.020 ms/op
# Warmup Iteration   4: 2.450 ±(99.9%) 0.029 ms/op
# Warmup Iteration   5: 2.313 ±(99.9%) 0.022 ms/op
# Warmup Iteration   6: 2.224 ±(99.9%) 0.022 ms/op
# Warmup Iteration   7: 2.140 ±(99.9%) 0.020 ms/op
# Warmup Iteration   8: 2.205 ±(99.9%) 0.027 ms/op
# Warmup Iteration   9: 2.115 ±(99.9%) 0.029 ms/op
# Warmup Iteration  10: 2.146 ±(99.9%) 0.022 ms/op
Iteration   1: 2.157 ±(99.9%) 0.015 ms/op
Iteration   2: 2.275 ±(99.9%) 0.018 ms/op
Iteration   3: 2.184 ±(99.9%) 0.019 ms/op


Result "benchmark.rpc.Client.createUser":
  2.205 ±(99.9%) 1.123 ms/op [Average]
  (min, avg, max) = (2.157, 2.205, 2.275), stdev = 0.062
  CI (99.9%): [1.082, 3.329] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.rpc.Client.existUser

# Run progress: 41.67% complete, ETA 00:01:53
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by javassist.ClassPool (file:/root/test/dubbo-client/target/dubbo-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of javassist.ClassPool
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
3.151 ±(99.9%) 0.031 ms/op
# Warmup Iteration   2: 1.462 ±(99.9%) 0.047 ms/op
# Warmup Iteration   3: 1.655 ±(99.9%) 0.025 ms/op
# Warmup Iteration   4: 1.289 ±(99.9%) 0.007 ms/op
# Warmup Iteration   5: 1.213 ±(99.9%) 0.010 ms/op
# Warmup Iteration   6: 1.237 ±(99.9%) 0.004 ms/op
# Warmup Iteration   7: 1.212 ±(99.9%) 0.003 ms/op
# Warmup Iteration   8: 1.257 ±(99.9%) 0.006 ms/op
# Warmup Iteration   9: 1.206 ±(99.9%) 0.005 ms/op
# Warmup Iteration  10: 1.143 ±(99.9%) 0.009 ms/op
Iteration   1: 1.209 ±(99.9%) 0.003 ms/op
Iteration   2: 1.170 ±(99.9%) 0.007 ms/op
Iteration   3: 1.179 ±(99.9%) 0.004 ms/op


Result "benchmark.rpc.Client.existUser":
  1.186 ±(99.9%) 0.376 ms/op [Average]
  (min, avg, max) = (1.170, 1.186, 1.209), stdev = 0.021
  CI (99.9%): [0.811, 1.562] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.rpc.Client.getUser

# Run progress: 50.00% complete, ETA 00:01:37
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by javassist.ClassPool (file:/root/test/dubbo-client/target/dubbo-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of javassist.ClassPool
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5.635 ±(99.9%) 0.066 ms/op
# Warmup Iteration   2: 3.744 ±(99.9%) 0.099 ms/op
# Warmup Iteration   3: 2.981 ±(99.9%) 0.021 ms/op
# Warmup Iteration   4: 2.306 ±(99.9%) 0.013 ms/op
# Warmup Iteration   5: 2.333 ±(99.9%) 0.013 ms/op
# Warmup Iteration   6: 2.170 ±(99.9%) 0.008 ms/op
# Warmup Iteration   7: 2.235 ±(99.9%) 0.012 ms/op
# Warmup Iteration   8: 2.298 ±(99.9%) 0.017 ms/op
# Warmup Iteration   9: 2.597 ±(99.9%) 0.021 ms/op
# Warmup Iteration  10: 2.862 ±(99.9%) 0.021 ms/op
Iteration   1: 2.634 ±(99.9%) 0.033 ms/op
Iteration   2: 2.407 ±(99.9%) 0.021 ms/op
Iteration   3: 2.350 ±(99.9%) 0.015 ms/op


Result "benchmark.rpc.Client.getUser":
  2.464 ±(99.9%) 2.737 ms/op [Average]
  (min, avg, max) = (2.350, 2.464, 2.634), stdev = 0.150
  CI (99.9%): [≈ 0, 5.201] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.rpc.Client.listUser

# Run progress: 58.33% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by javassist.ClassPool (file:/root/test/dubbo-client/target/dubbo-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of javassist.ClassPool
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
24.685 ±(99.9%) 0.808 ms/op
# Warmup Iteration   2: 13.351 ±(99.9%) 0.176 ms/op
# Warmup Iteration   3: 13.845 ±(99.9%) 0.162 ms/op
# Warmup Iteration   4: 11.667 ±(99.9%) 0.428 ms/op
# Warmup Iteration   5: 11.981 ±(99.9%) 0.145 ms/op
# Warmup Iteration   6: 10.748 ±(99.9%) 0.108 ms/op
# Warmup Iteration   7: 10.488 ±(99.9%) 0.119 ms/op
# Warmup Iteration   8: 10.725 ±(99.9%) 0.140 ms/op
# Warmup Iteration   9: 11.037 ±(99.9%) 0.138 ms/op
# Warmup Iteration  10: 10.326 ±(99.9%) 0.126 ms/op
Iteration   1: 10.408 ±(99.9%) 0.133 ms/op
Iteration   2: 10.822 ±(99.9%) 0.145 ms/op
Iteration   3: 10.547 ±(99.9%) 0.142 ms/op


Result "benchmark.rpc.Client.listUser":
  10.593 ±(99.9%) 3.840 ms/op [Average]
  (min, avg, max) = (10.408, 10.593, 10.822), stdev = 0.210
  CI (99.9%): [6.752, 14.433] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: benchmark.rpc.Client.createUser

# Run progress: 66.67% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by javassist.ClassPool (file:/root/test/dubbo-client/target/dubbo-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of javassist.ClassPool
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
3.977 ±(99.9%) 0.129 ms/op
# Warmup Iteration   2: 2.856 ±(99.9%) 0.067 ms/op
# Warmup Iteration   3: 2.613 ±(99.9%) 0.034 ms/op
# Warmup Iteration   4: 2.304 ±(99.9%) 0.020 ms/op
# Warmup Iteration   5: 2.234 ±(99.9%) 0.013 ms/op
# Warmup Iteration   6: 2.133 ±(99.9%) 0.015 ms/op
# Warmup Iteration   7: 2.247 ±(99.9%) 0.015 ms/op
# Warmup Iteration   8: 2.281 ±(99.9%) 0.019 ms/op
# Warmup Iteration   9: 2.106 ±(99.9%) 0.012 ms/op
# Warmup Iteration  10: 2.169 ±(99.9%) 0.013 ms/op
Iteration   1: 2.279 ±(99.9%) 0.023 ms/op
                 createUser·p0.00:   0.829 ms/op
                 createUser·p0.50:   2.101 ms/op
                 createUser·p0.90:   2.818 ms/op
                 createUser·p0.95:   3.940 ms/op
                 createUser·p0.99:   4.235 ms/op
                 createUser·p0.999:  14.909 ms/op
                 createUser·p0.9999: 16.209 ms/op
                 createUser·p1.00:   16.302 ms/op

Iteration   2: 2.124 ±(99.9%) 0.012 ms/op
                 createUser·p0.00:   0.913 ms/op
                 createUser·p0.50:   2.085 ms/op
                 createUser·p0.90:   2.519 ms/op
                 createUser·p0.95:   2.687 ms/op
                 createUser·p0.99:   3.060 ms/op
                 createUser·p0.999:  8.355 ms/op
                 createUser·p0.9999: 9.296 ms/op
                 createUser·p1.00:   9.470 ms/op

Iteration   3: 2.182 ±(99.9%) 0.018 ms/op
                 createUser·p0.00:   0.897 ms/op
                 createUser·p0.50:   2.126 ms/op
                 createUser·p0.90:   2.540 ms/op
                 createUser·p0.95:   2.699 ms/op
                 createUser·p0.99:   3.246 ms/op
                 createUser·p0.999:  14.593 ms/op
                 createUser·p0.9999: 14.713 ms/op
                 createUser·p1.00:   14.713 ms/op



Result "benchmark.rpc.Client.createUser":
  N = 43727
  mean =      2.193 ±(99.9%) 0.010 ms/op

  Histogram, ms/op:
    [ 0.000,  1.250) = 187 
    [ 1.250,  2.500) = 37866 
    [ 2.500,  3.750) = 4746 
    [ 3.750,  5.000) = 800 
    [ 5.000,  6.250) = 14 
    [ 6.250,  7.500) = 20 
    [ 7.500,  8.750) = 25 
    [ 8.750, 10.000) = 5 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 13 
    [13.750, 15.000) = 42 
    [15.000, 16.250) = 8 
    [16.250, 17.500) = 1 
    [17.500, 18.750) = 0 

  Percentiles, ms/op:
      p(0.0000) =      0.829 ms/op
     p(50.0000) =      2.105 ms/op
     p(90.0000) =      2.576 ms/op
     p(95.0000) =      2.826 ms/op
     p(99.0000) =      4.088 ms/op
     p(99.9000) =     14.340 ms/op
     p(99.9900) =     15.794 ms/op
     p(99.9990) =     16.302 ms/op
     p(99.9999) =     16.302 ms/op
    p(100.0000) =     16.302 ms/op


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: benchmark.rpc.Client.existUser

# Run progress: 75.00% complete, ETA 00:00:48
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by javassist.ClassPool (file:/root/test/dubbo-client/target/dubbo-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of javassist.ClassPool
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
3.075 ±(99.9%) 0.091 ms/op
# Warmup Iteration   2: 2.182 ±(99.9%) 0.012 ms/op
# Warmup Iteration   3: 1.689 ±(99.9%) 0.027 ms/op
# Warmup Iteration   4: 1.251 ±(99.9%) 0.010 ms/op
# Warmup Iteration   5: 1.244 ±(99.9%) 0.008 ms/op
# Warmup Iteration   6: 1.235 ±(99.9%) 0.013 ms/op
# Warmup Iteration   7: 1.141 ±(99.9%) 0.007 ms/op
# Warmup Iteration   8: 1.197 ±(99.9%) 0.004 ms/op
# Warmup Iteration   9: 1.199 ±(99.9%) 0.009 ms/op
# Warmup Iteration  10: 1.150 ±(99.9%) 0.003 ms/op
Iteration   1: 1.197 ±(99.9%) 0.012 ms/op
                 existUser·p0.00:   0.714 ms/op
                 existUser·p0.50:   1.116 ms/op
                 existUser·p0.90:   1.415 ms/op
                 existUser·p0.95:   1.599 ms/op
                 existUser·p0.99:   1.929 ms/op
                 existUser·p0.999:  16.602 ms/op
                 existUser·p0.9999: 16.886 ms/op
                 existUser·p1.00:   16.941 ms/op

Iteration   2: 1.258 ±(99.9%) 0.010 ms/op
                 existUser·p0.00:   0.693 ms/op
                 existUser·p0.50:   1.194 ms/op
                 existUser·p0.90:   1.528 ms/op
                 existUser·p0.95:   1.661 ms/op
                 existUser·p0.99:   1.995 ms/op
                 existUser·p0.999:  11.256 ms/op
                 existUser·p0.9999: 13.000 ms/op
                 existUser·p1.00:   13.140 ms/op

Iteration   3: 1.189 ±(99.9%) 0.005 ms/op
                 existUser·p0.00:   0.668 ms/op
                 existUser·p0.50:   1.169 ms/op
                 existUser·p0.90:   1.341 ms/op
                 existUser·p0.95:   1.444 ms/op
                 existUser·p0.99:   1.798 ms/op
                 existUser·p0.999:  5.892 ms/op
                 existUser·p0.9999: 8.060 ms/op
                 existUser·p1.00:   8.102 ms/op



Result "benchmark.rpc.Client.existUser":
  N = 78808
  mean =      1.214 ±(99.9%) 0.006 ms/op

  Histogram, ms/op:
    [ 0.000,  1.250) = 56259 
    [ 1.250,  2.500) = 22285 
    [ 2.500,  3.750) = 41 
    [ 3.750,  5.000) = 53 
    [ 5.000,  6.250) = 90 
    [ 6.250,  7.500) = 5 
    [ 7.500,  8.750) = 3 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 14 
    [11.250, 12.500) = 22 
    [12.500, 13.750) = 4 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 32 
    [17.500, 18.750) = 0 

  Percentiles, ms/op:
      p(0.0000) =      0.668 ms/op
     p(50.0000) =      1.161 ms/op
     p(90.0000) =      1.427 ms/op
     p(95.0000) =      1.589 ms/op
     p(99.0000) =      1.919 ms/op
     p(99.9000) =      7.096 ms/op
     p(99.9900) =     16.777 ms/op
     p(99.9990) =     16.941 ms/op
     p(99.9999) =     16.941 ms/op
    p(100.0000) =     16.941 ms/op


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: benchmark.rpc.Client.getUser

# Run progress: 83.33% complete, ETA 00:00:32
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by javassist.ClassPool (file:/root/test/dubbo-client/target/dubbo-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of javassist.ClassPool
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
6.965 ±(99.9%) 0.260 ms/op
# Warmup Iteration   2: 3.393 ±(99.9%) 0.039 ms/op
# Warmup Iteration   3: 3.152 ±(99.9%) 0.046 ms/op
# Warmup Iteration   4: 2.091 ±(99.9%) 0.015 ms/op
# Warmup Iteration   5: 2.152 ±(99.9%) 0.012 ms/op
# Warmup Iteration   6: 2.258 ±(99.9%) 0.025 ms/op
# Warmup Iteration   7: 2.184 ±(99.9%) 0.011 ms/op
# Warmup Iteration   8: 2.186 ±(99.9%) 0.014 ms/op
# Warmup Iteration   9: 2.242 ±(99.9%) 0.021 ms/op
# Warmup Iteration  10: 2.128 ±(99.9%) 0.015 ms/op
Iteration   1: 2.264 ±(99.9%) 0.022 ms/op
                 getUser·p0.00:   1.094 ms/op
                 getUser·p0.50:   2.150 ms/op
                 getUser·p0.90:   2.896 ms/op
                 getUser·p0.95:   3.207 ms/op
                 getUser·p0.99:   3.777 ms/op
                 getUser·p0.999:  15.106 ms/op
                 getUser·p0.9999: 15.781 ms/op
                 getUser·p1.00:   15.794 ms/op

Iteration   2: 2.245 ±(99.9%) 0.018 ms/op
                 getUser·p0.00:   0.971 ms/op
                 getUser·p0.50:   2.087 ms/op
                 getUser·p0.90:   2.913 ms/op
                 getUser·p0.95:   3.642 ms/op
                 getUser·p0.99:   4.579 ms/op
                 getUser·p0.999:  7.961 ms/op
                 getUser·p0.9999: 9.460 ms/op
                 getUser·p1.00:   9.585 ms/op

Iteration   3: 2.281 ±(99.9%) 0.025 ms/op
                 getUser·p0.00:   1.025 ms/op
                 getUser·p0.50:   2.179 ms/op
                 getUser·p0.90:   2.810 ms/op
                 getUser·p0.95:   3.138 ms/op
                 getUser·p0.99:   3.768 ms/op
                 getUser·p0.999:  15.220 ms/op
                 getUser·p0.9999: 15.614 ms/op
                 getUser·p1.00:   15.614 ms/op



Result "benchmark.rpc.Client.getUser":
  N = 42347
  mean =      2.263 ±(99.9%) 0.013 ms/op

  Histogram, ms/op:
    [ 0.000,  1.250) = 79 
    [ 1.250,  2.500) = 33092 
    [ 2.500,  3.750) = 8230 
    [ 3.750,  5.000) = 740 
    [ 5.000,  6.250) = 48 
    [ 6.250,  7.500) = 31 
    [ 7.500,  8.750) = 28 
    [ 8.750, 10.000) = 3 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 22 
    [12.500, 13.750) = 6 
    [13.750, 15.000) = 32 
    [15.000, 16.250) = 36 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 

  Percentiles, ms/op:
      p(0.0000) =      0.971 ms/op
     p(50.0000) =      2.138 ms/op
     p(90.0000) =      2.863 ms/op
     p(95.0000) =      3.240 ms/op
     p(99.0000) =      4.309 ms/op
     p(99.9000) =     14.964 ms/op
     p(99.9900) =     15.610 ms/op
     p(99.9990) =     15.794 ms/op
     p(99.9999) =     15.794 ms/op
    p(100.0000) =     15.794 ms/op


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
# VM options: -Xmx1g -Xms1g -XX:MaxDirectMemorySize=1g -XX:+UseG1GC
# Warmup: 10 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 32 threads, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: benchmark.rpc.Client.listUser

# Run progress: 91.67% complete, ETA 00:00:16
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by javassist.ClassPool (file:/root/test/dubbo-client/target/dubbo-client-round-1-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of javassist.ClassPool
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
22.609 ±(99.9%) 1.278 ms/op
# Warmup Iteration   2: 14.317 ±(99.9%) 0.207 ms/op
# Warmup Iteration   3: 11.662 ±(99.9%) 0.168 ms/op
# Warmup Iteration   4: 11.281 ±(99.9%) 0.160 ms/op
# Warmup Iteration   5: 10.980 ±(99.9%) 0.164 ms/op
# Warmup Iteration   6: 9.958 ±(99.9%) 0.100 ms/op
# Warmup Iteration   7: 10.241 ±(99.9%) 0.113 ms/op
# Warmup Iteration   8: 10.146 ±(99.9%) 0.094 ms/op
# Warmup Iteration   9: 10.167 ±(99.9%) 0.101 ms/op
# Warmup Iteration  10: 9.837 ±(99.9%) 0.093 ms/op
Iteration   1: 9.788 ±(99.9%) 0.091 ms/op
                 listUser·p0.00:   4.178 ms/op
                 listUser·p0.50:   9.388 ms/op
                 listUser·p0.90:   12.829 ms/op
                 listUser·p0.95:   13.795 ms/op
                 listUser·p0.99:   14.941 ms/op
                 listUser·p0.999:  17.866 ms/op
                 listUser·p0.9999: 18.645 ms/op
                 listUser·p1.00:   18.645 ms/op

Iteration   2: 10.272 ±(99.9%) 0.180 ms/op
                 listUser·p0.00:   5.833 ms/op
                 listUser·p0.50:   9.470 ms/op
                 listUser·p0.90:   13.451 ms/op
                 listUser·p0.95:   14.112 ms/op
                 listUser·p0.99:   28.148 ms/op
                 listUser·p0.999:  37.960 ms/op
                 listUser·p0.9999: 38.601 ms/op
                 listUser·p1.00:   38.601 ms/op

Iteration   3: 10.255 ±(99.9%) 0.111 ms/op
                 listUser·p0.00:   5.931 ms/op
                 listUser·p0.50:   9.683 ms/op
                 listUser·p0.90:   13.599 ms/op
                 listUser·p0.95:   14.336 ms/op
                 listUser·p0.99:   17.197 ms/op
                 listUser·p0.999:  22.143 ms/op
                 listUser·p0.9999: 22.577 ms/op
                 listUser·p1.00:   22.577 ms/op



Result "benchmark.rpc.Client.listUser":
  N = 9482
  mean =     10.101 ±(99.9%) 0.076 ms/op

  Histogram, ms/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 2 
    [ 5.000,  7.500) = 69 
    [ 7.500, 10.000) = 7150 
    [10.000, 12.500) = 1086 
    [12.500, 15.000) = 977 
    [15.000, 17.500) = 96 
    [17.500, 20.000) = 31 
    [20.000, 22.500) = 6 
    [22.500, 25.000) = 29 
    [25.000, 27.500) = 3 
    [27.500, 30.000) = 19 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 11 
    [35.000, 37.500) = 0 

  Percentiles, ms/op:
      p(0.0000) =      4.178 ms/op
     p(50.0000) =      9.503 ms/op
     p(90.0000) =     13.287 ms/op
     p(95.0000) =     14.090 ms/op
     p(99.0000) =     17.673 ms/op
     p(99.9000) =     34.117 ms/op
     p(99.9900) =     38.601 ms/op
     p(99.9990) =     38.601 ms/op
     p(99.9999) =     38.601 ms/op
    p(100.0000) =     38.601 ms/op


# Run complete. Total time: 00:03:16

Benchmark                               Mode    Cnt   Score    Error   Units
Client.createUser                      thrpt      3  14.762 ±  4.897  ops/ms
Client.existUser                       thrpt      3  26.774 ± 21.834  ops/ms
Client.getUser                         thrpt      3  14.805 ± 18.241  ops/ms
Client.listUser                        thrpt      3   3.089 ±  1.581  ops/ms
Client.createUser                       avgt      3   2.205 ±  1.123   ms/op
Client.existUser                        avgt      3   1.186 ±  0.376   ms/op
Client.getUser                          avgt      3   2.464 ±  2.737   ms/op
Client.listUser                         avgt      3  10.593 ±  3.840   ms/op
Client.createUser                     sample  43727   2.193 ±  0.010   ms/op
Client.createUser:createUser·p0.00    sample          0.829            ms/op
Client.createUser:createUser·p0.50    sample          2.105            ms/op
Client.createUser:createUser·p0.90    sample          2.576            ms/op
Client.createUser:createUser·p0.95    sample          2.826            ms/op
Client.createUser:createUser·p0.99    sample          4.088            ms/op
Client.createUser:createUser·p0.999   sample         14.340            ms/op
Client.createUser:createUser·p0.9999  sample         15.794            ms/op
Client.createUser:createUser·p1.00    sample         16.302            ms/op
Client.existUser                      sample  78808   1.214 ±  0.006   ms/op
Client.existUser:existUser·p0.00      sample          0.668            ms/op
Client.existUser:existUser·p0.50      sample          1.161            ms/op
Client.existUser:existUser·p0.90      sample          1.427            ms/op
Client.existUser:existUser·p0.95      sample          1.589            ms/op
Client.existUser:existUser·p0.99      sample          1.919            ms/op
Client.existUser:existUser·p0.999     sample          7.096            ms/op
Client.existUser:existUser·p0.9999    sample         16.777            ms/op
Client.existUser:existUser·p1.00      sample         16.941            ms/op
Client.getUser                        sample  42347   2.263 ±  0.013   ms/op
Client.getUser:getUser·p0.00          sample          0.971            ms/op
Client.getUser:getUser·p0.50          sample          2.138            ms/op
Client.getUser:getUser·p0.90          sample          2.863            ms/op
Client.getUser:getUser·p0.95          sample          3.240            ms/op
Client.getUser:getUser·p0.99          sample          4.309            ms/op
Client.getUser:getUser·p0.999         sample         14.964            ms/op
Client.getUser:getUser·p0.9999        sample         15.610            ms/op
Client.getUser:getUser·p1.00          sample         15.794            ms/op
Client.listUser                       sample   9482  10.101 ±  0.076   ms/op
Client.listUser:listUser·p0.00        sample          4.178            ms/op
Client.listUser:listUser·p0.50        sample          9.503            ms/op
Client.listUser:listUser·p0.90        sample         13.287            ms/op
Client.listUser:listUser·p0.95        sample         14.090            ms/op
Client.listUser:listUser·p0.99        sample         17.673            ms/op
Client.listUser:listUser·p0.999       sample         34.117            ms/op
Client.listUser:listUser·p0.9999      sample         38.601            ms/op
Client.listUser:listUser·p1.00        sample         38.601            ms/op
